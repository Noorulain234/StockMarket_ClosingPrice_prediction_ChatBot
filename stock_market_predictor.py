# -*- coding: utf-8 -*-
"""Stock_Market_predictor

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZkR6CuhNROOn1BddgW7rYSHyuqVh1uqT
"""

import yfinance as yf
import pandas as pd
import numpy as np

from sklearn.linear_model import LinearRegression
from datetime import datetime, timedelta

def fetch_stock_data(ticker):
    end_date = datetime.now()
    start_date = end_date - timedelta(days=60)  # Last 2 months data
    data = yf.download(ticker, start=start_date, end=end_date, progress=False)
    return data

def train_model(data):
    data = data.reset_index()
    data['Days'] = (data['Date'] - data['Date'].min()).dt.days
    X = data[['Days']]
    y = data['Close']

    model = LinearRegression()
    model.fit(X, y)

    return model, data

def predict_price(model, days_in_future):
    future_day = np.array([[days_in_future]])
    prediction = model.predict(future_day)
    return prediction.item()

def chatbot():
    print("ü§ñ Welcome to Mini Stock Predictor Bot!")
    print("-" * 50)

    while True:
        user_input = input("\nüìà Enter a stock ticker (or type 'exit' to quit): ").upper()

        if user_input == 'EXIT':
            print("üëã Goodbye! Happy investing!")
            break

        try:
            data = fetch_stock_data(user_input)
            if data.empty:
                print("‚ö†Ô∏è Couldn't fetch data. Try another ticker.")
                continue

            model, processed_data = train_model(data)

            last_day = processed_data['Days'].max()
            next_day = last_day + 1
            prediction = predict_price(model, next_day)

            print(f"‚úÖ Predicted closing price for {user_input} tomorrow: **${prediction:.2f}**")
            print("-" * 50)

        except Exception as e:
            print(f"‚ö†Ô∏è Error: {e}")
            print("-" * 50)

# Start the chatbot
chatbot()

